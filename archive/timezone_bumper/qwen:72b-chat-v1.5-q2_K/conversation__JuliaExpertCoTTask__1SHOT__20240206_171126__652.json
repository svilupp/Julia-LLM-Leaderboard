[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Data\n\ntimezone_bumper(DateTime(2023, 4, 10, 12, 0),3)","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction timezone_bumper(dt::DateTime, bump::Int=3)\n    if dt isa DateTime\n        new_dt = dt + Dates.Hour(bump))\n        return new_dt\n    else\n        error(\"Input must be a DateTime. Got: $(typeof(dt)))\")\n    end\nend\n\n# Test with provided data\ntimezone_bumper(DateTime(2023, 4, 10, 12, 0)), 3)\n```\nThe function `timezone_bumper` takes a `DateTime` object and an optional integer `bump`, defaulting to 3. It then adds the specified number of hours to the input timestamp.\n\nIf the input is not a `DateTime` object, the function throws an error with a descriptive message.","status":200,"tokens":[0,163],"elapsed":7.242840865,"_type":"aimessage"}]