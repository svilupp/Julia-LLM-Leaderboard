[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    lines = String[]\n    current_line = \"\"\n    \n    for word in split(lowercase(text)), r\"\\W+\")\n        if !isempty(current_line) && (length(current_line) + length(word)) > text_width\n            push!(lines, current_line)\n            current_line = word\n        else\n            current_line *= \" \" * word\n        end\n    end\n    \n    push!(lines, current_line)\n    \n    return lines\nend\n\n# Example usage\ntext = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\nwrapped_text = wrap_string(text)\n\nfor line in wrapped_text\n    println(line)\nend\n```\nThis code defines the `wrap_string` function according to your requirements. The example usage demonstrates how to use this function with a given text.","status":200,"tokens":[0,179],"elapsed":3.428048334,"_type":"aimessage"}]