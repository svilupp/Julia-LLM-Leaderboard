[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    lines = String[]\n    current_line = \"\"\n    \n    for word in split(text, ' ')\n        if occursin(r\"\\s+$\", current_line); continue end\n        new_line_length = length(current_line) + length(word) + 2 # accounting for space and newline\n\n        if new_line_length > text_width\n            push!(lines, current_line)\n            current_line = word * \" \"\n        else\n            current_line *= \" \" * word\n        end\n    end\n    \n    push!(lines, current_line)\n    join(lines, \"\\n\")\nend\n\n# Example usage:\ntext = \"This function will wrap words into lines\"\nwrapped_text = wrap_string(text)\nprintln(wrapped_text)\n```\nIn this example, the `wrap_string` function takes a text input and wraps the words into new lines based on the provided `text_width`. The wrapped text is then printed.\n:\n0","status":200,"tokens":[0,213],"elapsed":4.044622794,"_type":"aimessage"}]