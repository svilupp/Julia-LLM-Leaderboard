[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    words = split(text, ' ')\n    lines = String[]\n    current_line = \"\"\n\n    for word in words\n        if occursin(r\"\\b\\w{1,$text_width}}\\b\", word) ||\n           (length(current_line) + length(word)) <= text_width)\n            current_line *= \"$word \"\n        else\n            push!(lines, current_line)\n            current_line = \"$(word) \"\n        end\n    end\n\n    if !isempty(current_line)\n        push!(lines, current_line)\n    end\n\n    return join(lines, \"\\n\")\nend\n\n# Example usage\nexample_text = \"This function will wrap words into lines\"\nwrapped_string = wrap_string(example_text)\nprintln(wrapped_string)\n```\nIn this example, the `wrap_string` function takes a long text and wraps it into lines with a maximum width of 10 characters per line. The resulting wrapped string is then printed.\n:\n:","status":200,"tokens":[0,218],"elapsed":4.145673628,"_type":"aimessage"}]