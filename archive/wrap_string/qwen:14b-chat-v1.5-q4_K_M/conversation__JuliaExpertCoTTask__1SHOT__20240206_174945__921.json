[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    words = split(text, \" \")\n    lines = []\n    \n    current_line = \"\"\n    for word in words\n        if length(current_line) + length(word) + 1 > text_width\n            push!(lines, current_line)\n            current_line = word\n        else\n            current_line *= \" \" * word\n        end\n    end\n    \n    push!(lines, current_line)\n    \n    return lines\nend\n\nexample_text = \"This function will wrap words into lines\"\nwrapped_lines = wrap_string(example_text)\n\nprintln(\"Wrapped String:\")\nfor line in wrapped_lines\n    println(line)\nend\n```\n\nThe `wrap_string` function takes a text string and wraps the words into lines based on the specified `text_width`. In this example, it's set to 10 characters per line.\n:\n:","status":200,"tokens":[0,195],"elapsed":3.060037669,"_type":"aimessage"}]