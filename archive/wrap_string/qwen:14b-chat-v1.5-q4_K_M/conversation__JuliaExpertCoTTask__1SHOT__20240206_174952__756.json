[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    lines = []\n    word = \"\"\n    \n    for char in text\n        if char == ' '\n            # Add the word to the current line\n            push!(lines, word)\n            \n            # Reset the word for the next character\n            word = \"\"\n        else\n            # Keep adding characters to the current word\n            word *= char\n        end\n        \n        # Check if the line exceeds the text_width\n        if length(words) * avg_char_width > text_width\n            push!(lines, word)\n            word = \"\"\n        end\n    end\n    \n    # Add the last word if it wasn't part of a new line\n    if !isempty(word)\n        push!(lines, word)\n    end\n    \n    return lines\nend\n\n# Example usage\nexample_text = \"This function will wrap words into lines\"\nwrapped_lines = wrap_string(example_text)\n\nfor line in wrapped_lines\n    println(line)\nend\n```\nIn this example, the `wrap_string` function takes a string as input and returns an array of strings where each element represents a line after wrapping words based on the `text_width` parameter (default is 10 characters).","status":200,"tokens":[0,256],"elapsed":4.028209751,"_type":"aimessage"}]