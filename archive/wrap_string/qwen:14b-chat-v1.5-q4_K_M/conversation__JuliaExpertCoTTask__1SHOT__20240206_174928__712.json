[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    words = split(text, r\"\\s+\"))\n    wrapped_text = \"\"\n\n    for word in words\n        if occursin(r\"\\b\\w{1,$text_width}}\\b\", word) || endof(words)\n            wrapped_text *= word * \" \"\n            newline_needed = true\n        else\n            wrapped_text *= word * \" \"\n            newline_needed = false\n        end\n\n        if newline_needed\n            wrapped_text *= \"\\n\"\n        end\n    end\n\n    return wrapped_text\nend\n\n# Example usage\ntext = \"This function will wrap words into lines\"\nwrapped_text = wrap_string(text)\nprintln(wrapped_text)\n```\nIn this example, the `wrap_string` function takes a string as input and wraps the words into new lines based on the given `text_width`.","status":200,"tokens":[0,186],"elapsed":2.920815657,"_type":"aimessage"}]