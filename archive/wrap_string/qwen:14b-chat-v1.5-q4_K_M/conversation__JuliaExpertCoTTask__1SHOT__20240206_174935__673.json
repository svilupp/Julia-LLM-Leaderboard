[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    words = split(text, r\"\\s+\"))\n    wrapped_lines = String[]\n    \n    current_line_length = 0\n    for word in words\n        if current_line_length + length(word) > text_width\n            push!(wrapped_lines, string(current_word, \" \", rest_of_line))))\n            current_line_length = 0\n            end\n        \n        current_line_length += length(word)\n        current_word = word\n    end\n    \n    push!(wrapped_lines, string(current_word, \" \", rest_of_line))))\n    \n    join(wrapped_lines, \"\\n\")\nend\n\n# Example\nexample_text = \"This function will wrap words into lines\"\nformatted_example = wrap_string(example_text)\nprintln(formatted_example)\n```\n\nIn this example, the `wrap_string` function takes a long string and wraps it into multiple lines to fit within a specified `text_width`. The resulting formatted text is then printed.\n:\n:","status":200,"tokens":[0,211],"elapsed":3.317212211,"_type":"aimessage"}]