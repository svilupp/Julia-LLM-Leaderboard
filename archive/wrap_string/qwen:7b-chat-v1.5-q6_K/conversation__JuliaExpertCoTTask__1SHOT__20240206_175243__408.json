[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width = 10)\n    lines = String[]\n    words = split(text)\n\n    for word in words\n        if length(String(word)) + length(lines[end]) > text_width\n            push!(lines, \"\\n\")\n        end\n        push!(lines, word)\n    end\n    join(lines, \"\")\nend\n\n# Example\nwrap_string(\"This function will wrap words into lines\", 12) # Assuming a maximum width of 12 characters\n```\nIn this example, the `wrap_string` function takes a string and an optional text_width parameter. It splits the text into words and checks each word against the specified text_width. If a line would exceed the limit, it adds a newline character to start a new line. The final result is a wrapped string with lines no longer than the given text_width.","status":200,"tokens":[170,183],"elapsed":5.705893972,"_type":"aimessage"}]