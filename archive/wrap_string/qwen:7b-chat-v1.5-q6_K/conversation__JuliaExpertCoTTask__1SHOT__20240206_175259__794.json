[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(text, text_width=10)\n    wrapped_lines = []\n    \n    for word in split(text)\n        # Calculate the length of the current word\n        word_length = length(word)\n        \n        # Check if the word would exceed the given width\n        if word_length + length(wrapped_lines[end]) > text_width\n            # Add a newline to separate the line\n            wrapped_lines[end] *= \"\\n\"\n            \n            # Start a new line with the remaining width\n            wrapped_lines.push(word, width=text_width - word_length))\n        else\n            # If the word fits within the given width, add it directly\n            wrapped_lines.push(word)\n        end\n    end\n    \n    join(wrapped_lines, \"\\n\"))\nend\n\n# Example\ntext = \"This function will wrap words into lines\"\nwrapped_text = wrap_string(text)\nprintln(wrapped_text)\n```\nThe `wrap_string` function iterates over each word in the input text. It checks if a new line is needed to avoid exceeding the specified `text_width`. The wrapped lines are then joined together with newline characters.\n\nIn the provided example, the input text \"This function will wrap words into lines\" is wrapped to fit within 10 characters per line. The resulting wrapped text is printed.","status":200,"tokens":[0,269],"elapsed":3.214032978,"_type":"aimessage"}]