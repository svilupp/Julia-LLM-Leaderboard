[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{Int})\n    if isempty(temps)\n        return (average = nothing,\n                 max = nothing,\n                 min = nothing,\n                 trend = nothing))\n    else\n        avg_temp = mean(temps)\n        max_temp = maximum(temps)\n        min_temp = minimum(temps)\n\n        # Determine the trend\n        temp_diffs = diff(temps)\n        increasing_trend = all(diff > 0) for diff in temp_diffs)\n        decreasing_trend = all(diff < 0) for diff in temp_diffs)\n        stable_trend = !increasing_trend && !decreasing_trend\n\n        trend = ifelse(increasing_trend, :increasing),\n                                 decreasing_trend ? :decreasing : nothing,\n                                 stable_trend ? :stable : nothing)\n\n        return (average = avg_temp,\n                 max = max_temp,\n                 min = min_temp,\n                 trend = trend))\n    end\nend\n\n# Test the function with given data\nresult = weather_data_analyzer([25, 27, 23, 20, 22]])\nprintln(result)\n```\n\nThis code defines a `weather_data_analyzer` function that takes in a list of daily temperature data and performs statistical analyses on it. The function returns the results as a named tuple.\n\nIn this example, I've provided an input list `[25, 27, 23, 20, 22]`. The function would analyze this data and return the results accordingly.","status":200,"tokens":[0,331],"elapsed":6.327982428,"_type":"aimessage"}]