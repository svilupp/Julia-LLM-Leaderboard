[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"To solve this task, we'll first import the necessary packages, then define the `weather_data_analyzer` function with the requested functionality.\n\nHere's the code:\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{Int})\n    if isempty(temps)\n        return (average = nothing,\n                 max = nothing,\n                 min = nothing,\n                 trend = :stable))\n    else\n        avg_temp = mean(temps)\n        max_temp = maximum(temps)\n        min_temp = minimum(temps)\n\n        increasing = all(diff(sort(temps)))) .> 0)\n        decreasing = all(diff(sort(temps)))) .< 0)\n        stable = !increasing && !decreasing\n\n        trend = increasing ? :increasing :\n                 decreasing ? :decreasing : :stable\n\n        return (average=avg_temp,\n                 max=max_temp,\n                 min=min_temp,\n                 trend=trend))\n    end\nend\n```\nNow, let's test the function with the provided data:\n```julia\nweather_data_analyzer([25, 27, 23, 20, 22]))\n```\nThe output should be a named tuple containing the statistical information and trend for the given temperature data.","status":200,"tokens":[0,262],"elapsed":5.006449088,"_type":"aimessage"}]