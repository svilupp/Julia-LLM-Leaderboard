[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"To solve this task, we'll first import the necessary package (Statistics), then define the `weather_data_analyzer` function. Here's the code:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{Int})\n    # Check if the list is empty\n    isempty(temps) ? (average = nothing, max = nothing, min = nothing, trend = nothing) : (\n        average = mean(temps),\n        max = maximum(temps),\n        min = minimum(temps),\n        # Determine trend based on average and first/last elements\n        trend = isincreasing(sort([first(temps)], average), [last(temps)])) ? :increasing : \n        isdecreasing(sort([first(temps)], average), [last(temps)])) ? :decreasing : \n        :stable\n    )\nend\n\n# Test the function with provided data\nresult = weather_data_analyzer([25, 27, 23, 20, 22]))\nprintln(result)\n```\n\nThis code defines the `weather_data_analyzer` function and tests it using the provided data. The output will be a named tuple containing the requested statistical information and trend analysis.","status":200,"tokens":[0,254],"elapsed":4.027399529,"_type":"aimessage"}]