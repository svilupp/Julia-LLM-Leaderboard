[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here is one way you could implement this function:\n```python\nusing Statistics\n\nWeatherDataAnalyzer = struct(\n    average::Float64,\n    max::Float64,\n    min::Float64,\n    trend::Str,\n)\nfunction WeatherDataAnalyzer(temps::Vector{Float64}}))\n```\n\nThis implementation defines a `WeatherDataAnalyzer` struct that contains the various statistical values, as well as a `trend` string value.\nThe function `WeatherDataAnalyzer` takes a vector of daily temperature data `temps` as input. This function returns a `WeatherDataAnalyzer` struct object containing the various statistical values for this data.\nI hope this helps! Let me know if you have any other questions.","status":200,"tokens":[0,151],"elapsed":1.454019019,"_type":"aimessage"}]