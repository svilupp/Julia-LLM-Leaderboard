[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (; average = nothing, max = nothing, min = nothing, trend = nothing))\n    end\n    \n    stats = (; average = mean(temps), max = maximum(temps), min = minimum(temps), trend = nothing))\n\n    # Analyze the trend\n    last_temp, first_temp = extrema(temps)\n    if first_temp == last_temp\n        trend = \":stable\"\n    elseif first_temp < last_temp\n        trend = \":increasing\"\n    else\n        trend = \":decreasing\"\n    end\n    \n    return stats .merge ( (; trend=trend) ))\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22]])\n```\nThis function `weather_data_analyzer` takes a list of daily temperature data and performs statistical analyses. It returns a named tuple containing the average, maximum, minimum temperatures, and a trend analysis. If the input list is empty, it returns a named tuple with all values set to `nothing`.","status":200,"tokens":[0,233],"elapsed":2.411817228,"_type":"aimessage"}]