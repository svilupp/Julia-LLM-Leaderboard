[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        result = (; average=nothing, max=nothing,\n                              min=nothing, trend=nothing))\n    else\n        avg_temp = mean(temps)\n        max_temp = maximum(temps)\n        min_temp = minimum(temps)\n\n        trend = if all(t > t[1] for t in temps[2:end])))\n            :increasing\n        elseif all(t < t[1] for t in temps[2:end]]))\n            :decreasing\n        else\n            :stable\n        end\n\n        result = (; average=avg_temp, max=max_temp,\n                              min=min_temp, trend=trend))\n    end\n\n    return result\nend\n\nweather_analysis = weather_data_analyzer([25, 27, 23, 20, 22]]))\nprintln(weather_analysis)\n```\n\nThis code defines a function `weather_data_analyzer` that takes a list of daily temperatures as input. It performs statistical analyses and returns the results in a named tuple.\n\nThe analysis includes calculating the average (`average`), maximum (`max`), minimum (`min`), and determining the trend based on the temperature changes (`:increasing`, `:decreasing`, or `:stable`). If the list is empty, it returns a named tuple with all values set to `nothing`.","status":200,"tokens":[0,291],"elapsed":3.026582216,"_type":"aimessage"}]