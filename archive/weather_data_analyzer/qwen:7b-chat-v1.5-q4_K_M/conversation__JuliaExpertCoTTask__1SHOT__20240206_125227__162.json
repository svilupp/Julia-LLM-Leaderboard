[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"``` julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        result = (; average=nothing, max=nothing,\n                            min=nothing, trend=nothing))\n    else\n        daily_stats = mean(temps), maximum(temps), minimum(temps)\n\n        trend = ifelse(ismonotonic(temps)', :increasing),\n                                     \"Increasing\",\n                                     ifelse(ismonotonic(temps)', :decreasing),\n                                         \"Decreasing\",\n                                         \"Stable\"))\n\n        result = (; average=daily_stats[1], max=daily_stats[2],\n                            min=daily_stats[3], trend=trend))\n    end\n    return result\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22]])\n```\n\nThe function `weather_data_analyzer` takes a list of daily temperatures as input and returns a named tuple containing the statistical analyses. If the input list is empty, it returns a named tuple with all values set to `nothing`.","status":200,"tokens":[270,219],"elapsed":5.457840482,"_type":"aimessage"}]