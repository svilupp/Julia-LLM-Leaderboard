[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (; average=Nothing, max=Nothing,\n                       min=Nothing, trend=Nothing))\n    end\n    \n    avg = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    \n    # Calculate trend based on the given temperatures\n    trend = ifelse(mean(diff(temps)))) > 0,\n                      :increasing,\n                      ifelse(mean(diff(temps)))) < 0,\n                      :decreasing,\n                      :stable)\n    \n    result = (average=avg, max=max_temp,\n                     min=min_temp, trend=trend))\n    \n    return result\nend\n\n# Test case\nweather_data_analyzer([25, 27, 23, 20, 22]])\n```\nThe function `weather_data_analyzer` takes a list of daily temperatures as input and returns the requested statistical analyses in a named tuple. If the list is empty, it returns a named tuple with all values set to `nothing`.","status":200,"tokens":[0,231],"elapsed":2.760329623,"_type":"aimessage"}]