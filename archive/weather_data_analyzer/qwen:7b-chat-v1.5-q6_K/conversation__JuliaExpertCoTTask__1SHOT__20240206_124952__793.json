[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here's the implementation of the `weather_data_analyzer` function according to the task:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    isempty(temps) ? (average=Nothing, max=Nothing, min=Nothing, trend=Nothing) : begin\n        average = mean(temps)\n        max_temp = maximum(temps)\n        min_temp = minimum(temps)\n\n        # Determine the trend based on consecutive differences\n        trend_diffs = [(temps[i+1]] - temps[i]) for i in 1:end-1]\n        if all(diff <= 0) || all(diff >= 0)) # Increasing or decreasing trend\n            trend = (diffs[2] < 0 ? \"decreasing\" : \"increasing\"]) * \"stable\"\n        else # Stable trend with no clear direction\n            trend = \"stable\"\n        end\n    end\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22]]) \n```\n\nThis function takes a list of daily temperature data as input and returns a named tuple containing the average, maximum, minimum temperatures and the trend. If the list is empty, it returns a named tuple with all values set to `nothing`.","status":200,"tokens":[0,265],"elapsed":3.174706251,"_type":"aimessage"}]