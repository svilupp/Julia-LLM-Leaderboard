[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Based on the special instructions provided, it seems like there might be some missing information or specific requirements that need to be addressed. Since no additional guidelines were given, I'll assume a generic approach to extracting code blocks from a markdown document.\n\nHere's the function `extract_julia_code`:\n```julia\nfunction extract_julia_code(md)\n    # Regular expression pattern to match code blocks\n    code_block_pattern = r\"^(```|~~~)(\\s*(?:(?!````|~~~).)*?)\\1```\\n?$\"\n\n    # Extract all code blocks from the markdown document\n    code_blocks = findall(code_block_pattern, md)\n\n    # Join the code blocks together with a newline character\n    joined_code = join(map(x -> x[3:end-3]], code_blocks), \"\\n\")\n\n    return joined_code\nend\n```\nThis function should extract all Julia code blocks from the provided markdown document `md`.","status":200,"tokens":[0,198],"elapsed":3.167996358,"_type":"aimessage"}]