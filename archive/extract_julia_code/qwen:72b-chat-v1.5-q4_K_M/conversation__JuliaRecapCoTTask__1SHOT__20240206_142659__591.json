[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Since no special instructions were provided, I will proceed with the default approach as described in the task.\n\nHere's the `extract_julia_code` function:\n\n```julia\nfunction extract_julia_code(md)\n    code_blocks = split(md, \"\\n\\n\")\n    julia_code = \"\"\n    \n    for block in code_blocks\n        if occursin(r\"^\\s*```julia\", block) && \n            occursin(r\"^\\s*```\", block))\n            \n            julia_code *= replace(block, r\"^```julia\\n\" => \"\") *\n                                      replace(block, r\"\\n```$\" => \"\\n\")\n        end\n    end\n    \n    return julia_code\nend\n```\n\nThis function first splits the markdown document into separate blocks. It then iterates over these blocks and checks for code fences with \"julia\" specified. If found, it removes the code fences and adds a newline between code blocks if needed.\n\nThe extracted Julia code is returned as a String.","status":200,"tokens":[0,205],"elapsed":11.94889271,"_type":"aimessage"}]