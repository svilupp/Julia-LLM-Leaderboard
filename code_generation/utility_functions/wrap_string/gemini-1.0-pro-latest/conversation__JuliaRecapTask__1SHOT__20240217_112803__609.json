[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\nNone.\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\n\nusing Printf\n\nfunction wrap_string(text:AbstractString; text_width::Int=10)\n    words = split(text)\n    lines = []\n    i = 0\n    res = \"\"\n    for word in words\n        newres = res*word*\" \"\n        if length(newres) <= text_width\n            res = newres\n            i += length(res) * length(words)\n        else\n            push!(lines, res)\n            i = 0\n            res = word*\" \"\n        end\n    end\n    push!(lines, res)\n    return join(\"\\n\", lines)\nend\n\nexample = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus purus quis dignissim accumsan. Sed arcu orci, aliquet vel eros eget, mollis ullamcorper sapien. Nam ullamcorper turpis ac sapien viverra imperdiet. Vestibulum accumsan enim tellus, ac consequat purus finibus et. Sed consectetur lacinia mi. Mauris cursus tempor odio, eget posuere massa placerat et. Donec eleifend massa sit amet tortor fermentum, at tincidunt felis ornare. Quisque vulputate feugiat quam, in egestas lorem mattis ut. Mauris imperdiet, dui vitae efficitur luctus, tortor diam malesuada dui, quis lacinia arcu augue at libero.\"\n\nprintln(\"Example:\")\nprintln(example)\n\nprintln(\"\\nWrapped string:\")\nprintln(wrap_string(example, 50))\n\n```","status":200,"tokens":[0,0],"elapsed":6.4665045,"_type":"aimessage"}]