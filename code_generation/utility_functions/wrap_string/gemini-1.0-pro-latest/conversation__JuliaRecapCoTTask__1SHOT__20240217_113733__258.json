[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nusing Printf\n\nfunction wrap_string(txt::AbstractString; text_width::Int=10)::AbstractString\n    lines = split(txt, \" \")\n    wrapped = Vector{String}()\n    tmp = String()\n    for line in lines\n        strlen = length(tmp) + length(line) + 1  # line contains extra space\n        if strlen <= text_width\n            tmp = $tmp\" $line\"\n        else\n            push!(wrapped, tmp)\n            tmp = line\n        end\n    end\n    push!(wrapped, tmp)  # might contain extra space if < text_width\n    join(wrapped, \"\\n\")\nend\n\n@assert wrap_string(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ligula leo, pharetra ut pretium sed, ornare sit amet enim. Aliquam erat volutpat. Morbi orci nisi, euismod nec lobortis in, maximus non purus. Phasellus at sapien eget massa tincidunt venenatis. Nulla convallis nunc sit amet diam volutpat, ac auctor risus bibendum.\") == \"Lorem ipsum\\ndolor sit\\namet,\\nconsectetur\\nadipiscing\\nelit.\\nPellentesque\\nligula leo,\\npharetra ut\\npretium sed,\\nornare sit\\namet enim.\\nAliquam erat\\nvolutpat.\\nMorbi orci\\nnisi, euismod\\nnec lobortis\\nin, maximus\\nnon purus.\\nPhasellus at\\nsapien eget\\nmassa\\ntincidunt\\nvenenatis.\\nNulla\\nconvallis\\nnunc sit\\namet diam\\nvolutpat, ac\\nauctor risus\\nbibendum.\"\n\n```","status":200,"tokens":[0,0],"elapsed":11.984619166,"_type":"aimessage"}]