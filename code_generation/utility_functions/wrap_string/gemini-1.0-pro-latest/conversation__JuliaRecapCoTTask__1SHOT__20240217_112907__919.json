[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(s::AbstractString; text_width::Int=10)\n    text = s[1:end]\n    while length(text) > text_width\n        pos = text_width\n        while Julia.isletter(text[pos])\n            pos += 1\n        end\n        if pos == text_width\n            pos = length(text)\n        end\n        (s, text) = (s * newline * text[1:pos], text[pos+1:end])\n    end\n    s\nend\n\n@assert wrap_string(\"Lorem ipsum dolor sit amet\") == \"Lorem ipsum\\ndolor sit\\namet\"\n@assert wrap_string(\"This is a very long string that would not fit within the 10 character limit.\", 10) == \"This is a\\nvery long\\nstring\\nthat would\\nnot fit\\nwithin the\\n10 character\\nlimit.\"\n```","status":200,"tokens":[0,0],"elapsed":4.666826,"_type":"aimessage"}]