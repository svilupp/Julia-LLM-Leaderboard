[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Printf\n\nfunction wrap_string(text::String; text_width::Int=10)\n    result = \"\"\n    start = 1\n    while start <= length(text)\n        total_width = 0\n        end = start\n        while end <= length(text) && total_width < text_width\n            c = text[end]\n            if c == \" \"\n                total_width -= 1  # Ignore spaces\n            end\n            total_width += 1\n            end += 1\n        end\n        if end == start  # Avoid empty lines\n            result = result * (text[start] * text_width)\n        else\n            result = result * (text[start:end-1] * \"\\n\")\n        end\n        start = end\n    end\n    return result\nend\n\n@printf(\"This function will wrap words into lines:\\n%s\", wrap_string(\"This function will wrap words into lines\"))\n```","status":200,"tokens":[0,0],"elapsed":6.8444695,"_type":"aimessage"}]