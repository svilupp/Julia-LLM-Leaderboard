[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(s::String, text_width::Int=10)\n    words = split(s)\n    lines = String[]\n    current_line = String[]\n    current_length = 0\n\n    for word in words\n        if current_length + length(word) + (isempty(current_line) ? 0 : 1) <= text_width\n            push!(current_line, word)\n            current_length += length(word) + (isempty(current_line) ? 0 : 1)\n        else\n            push!(lines, join(current_line, \" \"))\n            current_line = [word]\n            current_length = length(word)\n        end\n    end\n\n    push!(lines, join(current_line, \" \"))\n    return join(lines, \"\\n\")\nend\n\nprintln(wrap_string(\"This function will wrap words into lines\", 10))\n```\n\nThis function splits the input string into words, then iteratively adds words to the current line until it exceeds the maximum width. It then starts a new line. The function ensures that no word is split across lines. The output of the example is:\n\n```\nThis\nfunction\nwill wrap\nwords into\nlines\n```","status":200,"tokens":[179,294],"elapsed":2.045470583,"cost":0.0,"log_prob":null,"finish_reason":"stop","run_id":824933575,"sample_id":null,"_type":"aimessage"}]