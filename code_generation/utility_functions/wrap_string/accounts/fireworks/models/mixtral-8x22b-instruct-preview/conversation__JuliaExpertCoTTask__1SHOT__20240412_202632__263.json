[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"- Think through your approach step by step:\n\n1. Create a function named `wrap_string`.\n2. Pass the text and the maximum width (`text_width`) as arguments.\n3. Find a word's index that exceeds the maximum width.\n4. Insert a line break at that index.\n5. Split the whole text after each line break.\n\n- Write any functions and other code you need:\n\n```julia\nfunction wrap_string(text::String)\n    strs = [\"This function\", \"will wrap\", \"words into\", \"lines\"]\nend\n```\n\n- Solve the task:\n\n```julia\nfunction wrap_string(text::String, text_width::Int=10)\n    index = findfirst(x -> x > text_width, cumsum(map(x -> length(x)+1, split(text","status":200,"tokens":[187,200],"elapsed":3.44838475,"cost":0.00034829999999999996,"log_prob":null,"finish_reason":"length","run_id":-1817853313,"sample_id":null,"_type":"aimessage"}]