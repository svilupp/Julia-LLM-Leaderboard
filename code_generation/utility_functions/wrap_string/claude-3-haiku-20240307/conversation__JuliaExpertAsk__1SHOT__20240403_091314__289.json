[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example","variables":["ask"],"_type":"usermessage"},{"content":"Here's a function `wrap_string` that wraps a given string to a maximum width:\n\n```julia\nfunction wrap_string(text::String; text_width::Int=10)\n    words = split(text)\n    wrapped_text = \"\"\n    current_line_length = 0\n    for word in words\n        if current_line_length + length(word) + (current_line_length > 0 ? 1 : 0) > text_width\n            wrapped_text *= \"\\n\"\n            current_line_length = 0\n        end\n        wrapped_text *= (current_line_length > 0 ? \" \" : \"\") * word\n        current_line_length += length(word) + (current_line_length > 0 ? 1 : 0)\n    end\n    return wrapped_text\nend\n```\n\nHere's an example usage:\n\n```julia\ntext = \"The quick brown fox jumps over the lazy dog.\"\nwrapped_text = wrap_string(text)\nprintln(wrapped_text)\n```\n\nThis will output:\n\n```\nThe quick\nbrown fox\njumps over\nthe lazy\ndog.\n```\n\nThe function `wrap_string` takes a string `text` as input and an optional `text_width` parameter, which specifies the maximum width of each line. It splits the input text into words, then iterates over the words, adding them to the current line as long as the maximum width would not be exceeded. When the maximum width is reached, it adds a newline character and starts a new line.\n\nThe `(current_line_length > 0 ? 1 : 0)` expression adds a space between words if the current line already has some text.","status":200,"tokens":[94,394],"elapsed":4.148884417,"cost":0.000516,"log_prob":null,"finish_reason":"end_turn","run_id":-30799,"sample_id":null,"_type":"aimessage"}]