[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach in <approach></approach> tags when writing code. Your communication is brief and concise.\n\n<approach>\n- Take a deep breath\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n</approach>\n\nUsing the data in <data></data> tags (if none is provided, create some examples), solve the requested task in <task></task> tags.\n","variables":[],"_type":"systemmessage"},{"content":"<task>\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n</task>\n\n<data>\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")\n</data>","variables":["task","data"],"_type":"usermessage"},{"content":"<approach>\n- Take a deep breath\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n</approach>\n\n```julia\nfunction extract_julia_code(md)\n    # Find all Julia code blocks using a regular expression\n    code_blocks = collect(eachmatch(r\"```julia\\n(.+?)\\n```\"sm, md))\n    \n    # Extract code from each block and join with newlines\n    code = join(map(m -> m.captures[1], code_blocks), \"\\n\")\n    \n    return code\nend\n```","status":200,"tokens":[232,152],"elapsed":3.519322834,"cost":0.002976,"log_prob":null,"finish_reason":"end_turn","run_id":-15929,"sample_id":null,"_type":"aimessage"}]