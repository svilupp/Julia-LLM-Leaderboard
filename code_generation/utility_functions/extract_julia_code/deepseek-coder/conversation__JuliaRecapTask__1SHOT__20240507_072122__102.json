[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder for the Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Special Instructions\n\nNone.\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Here is a function that fulfills the task:\n\n```julia\nfunction extract_julia_code(md::String)\n    code_blocks = filter(x -> startswith(x, \"```julia\") || startswith(x, \"```\"), split(md, \"\\n\"))\n    code = join(map(x -> replace(x, r\"```julia|```\" => \"\"), code_blocks), \"\\n\")\n    return code\nend\n```\n\nThis function works by first splitting the markdown document into lines and filtering out the lines that start with \"```julia\" or \"```\". These are the lines that contain the code blocks. Then it maps over these lines and removes the \"```julia\" or \"```\" from the start and end of each line. Finally, it joins all the lines together with a newline character and returns the result.","status":200,"tokens":[417,201],"elapsed":8.487469833,"cost":0.00011466000000000002,"log_prob":null,"finish_reason":"stop","run_id":284420421,"sample_id":null,"_type":"aimessage"}]