[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach in <approach></approach> tags when writing code. Your communication is brief and concise.\n\n<approach>\n- Take a deep breath\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n</approach>\n\nUsing the data in <data></data> tags (if none is provided, create some examples), solve the requested task in <task></task> tags.\n","variables":[],"_type":"systemmessage"},{"content":"<task>\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n</task>\n\n<data>\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")\n</data>","variables":["task","data"],"_type":"usermessage"},{"content":"Here is the function to extract Julia code from a Markdown document:\n\n<approach>\n- Take a deep breath\n- Think through the approach step by step\n- Write the function to extract the code blocks\n- Solve the task\n- Check that the solution is correct\n</approach>\n\n```julia\nfunction extract_julia_code(md)\n    code_blocks = collect(eachmatch(r\"```julia\\n(.*?)\\n```\", md, regexflags=DOTALL))\n    joined_code = join([block.captures[1] for block in code_blocks], \"\\n\")\n    return joined_code\nend\n```\n\nThe function uses a regular expression to find all the code blocks in the Markdown document that start with ````julia` and end with `````. It then collects the captured content (the code itself) from each match, and joins them together with a newline character.","status":200,"tokens":[232,205],"elapsed":2.655668791,"cost":0.00031425,"log_prob":null,"finish_reason":"end_turn","run_id":-27940,"sample_id":null,"_type":"aimessage"}]