[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here is the solution in Julia:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average = nothing, max = nothing, min = nothing, trend = nothing)\n    end\n\n    avg = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n\n    trend = determine_trend(temps)\n\n    return (average = avg, max = max_temp, min = min_temp, trend = trend)\nend\n\nfunction determine_trend(temps)\n    diff = temps[2:end] .- temps[1:end-1]\n    if all(diff .> 0)\n        return :increasing\n    elseif all(diff .< 0)\n        return :decreasing\n    else\n        return :stable\n    end\nend\n\nweather_data_analyzer([25, 27, 23, 20, 22])\n```\n\nThis code defines a function `weather_data_analyzer` that takes a list of temperatures as input and returns a named tuple with the average, max, min temperatures, and a trend. The `determine_trend` function is used to calculate the trend of the temperature data. If the input list is empty, the function returns a named tuple with all values set to `nothing`.","status":200,"tokens":[259,271],"elapsed":1.948194125,"cost":7.468e-5,"log_prob":null,"finish_reason":"eos","run_id":865811534,"sample_id":null,"_type":"aimessage"}]