[{"content":"You are a world-class Julia language programmer with the knowledge of the latest syntax. Your communication is brief and concise. You're precise and answer only when you're confident in the high quality of your answer.","variables":[],"_type":"systemmessage"},{"content":"# Question\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.","variables":["ask"],"_type":"usermessage"},{"content":"```java\nimport org.apache.commons.math3.stat.StatUtils;\n\npublic class WeatherDataAnalyzer {\n    public static void main(String[] args) {\n        double[] temps = {22.6, 23.7, 20.8, 18.2, 21.7, 22.5, 23.9, 23.9, 21.3, 22.4};\n        NamedTuple result = weatherDataAnalyzer(temps);\n        System.out.println(result.toString());\n    }\n\n    public static NamedTuple weatherDataAnalyzer(double[] temps) {\n        if (temps.length == 0) {\n            return new NamedTuple(nothing(), nothing(), nothing(), nothing());\n        }\n\n        double average = StatUtils.mean(temps);\n        double max = StatUtils.max(temps);\n        double min = StatUtils.min(temps);\n\n        double[] differences = new double[temps.length - 1];\n        for (int i = 1; i < temps.length; i++) {\n            differences[i - 1] = temps[i] - temps[i - 1];\n        }\n\n        boolean isIncreasing = StatUtils.percentile(differences, 50) > 0;\n        boolean isDecreasing = StatUtils.percentile(differences, 50) < 0;\n\n        String trend;\n        if (isIncreasing && isDecreasing) {\n            trend = \":stable\";\n        } else if (isIncreasing) {\n            trend = \":increasing\";\n        } else {\n            trend = \":decreasing\";\n        }\n\n        return new NamedTuple(average, max, min, trend);\n    }\n\n    public static class NamedTuple {\n        public final double average;\n        public final double max;\n        public final double min;\n        public final String trend;\n\n        public NamedTuple(double average, double max, double min, String trend) {\n            this.average = average;\n            this.max = max;\n            this.min = min;\n            this.trend = trend;\n        }\n\n        @Override\n        public String toString() {\n            return \"(average=%s, max=%s, min=%s, trend=%s)\".formatted(average, max, min, trend);\n        }\n    }\n\n    private static double nothing() {\n        return -999.999;\n    }\n}\n```","status":200,"tokens":[181,466],"elapsed":1.824727375,"cost":0.0,"log_prob":null,"finish_reason":"stop","run_id":759704140,"sample_id":null,"_type":"aimessage"}]