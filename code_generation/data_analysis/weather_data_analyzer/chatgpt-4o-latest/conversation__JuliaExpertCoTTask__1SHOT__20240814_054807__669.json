[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps::Vector{<:Real})\n    if isempty(temps)\n        return (; average=nothing, max=nothing, min=nothing, trend=nothing)\n    end\n\n    average_temp = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n\n    if issorted(temps)\n        trend = :increasing\n    elseif issorted(temps, rev=true)\n        trend = :decreasing\n    else\n        trend = :stable\n    end\n\n    return (; average=average_temp, max=max_temp, min=min_temp, trend=trend)\nend\n\n# Example usage\nresult = weather_data_analyzer([25, 27, 23, 20, 22])\nprintln(result)\n```\n### Explanation:\n1. **Data Check**: If `temps` is empty, the function returns a named tuple with all values set to `nothing`.\n2. **Statistical Analysis**:\n   - `average_temp` is computed as the mean of the list.\n   - `max_temp` stores the maximum value.\n   - `min_temp` stores the minimum value.\n3. **Trend Analysis**:\n   - If the list is sorted in increasing order, the trend is set to `:increasing`.\n   - If sorted in decreasing order, the trend is set to `:decreasing`.\n   - Otherwise, the trend is `:stable`.\n\nThe output for the provided example `[25, 27, 23, 20, 22]` will be:\n```julia\n(average = 23.4, max = 27, min = 20, trend = :stable)\n```","status":200,"tokens":[254,354],"elapsed":3.946805458,"cost":0.0,"log_prob":null,"finish_reason":"stop","run_id":-1268677802,"sample_id":null,"_type":"aimessage"}]