[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Special Instructions\n\nNone.\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"```julia\nfunction timezone_bumper(dt::DateTime, bump::Int = 3; base_tz=\"UTC\")\n    # Convert the date-time to a string in UTC format and parse it back into a DateTime object in the specified timezone.\n    local_tz = TZDate().utc_offset / (60 * 60) + bump\n    str_dt = Dates.format(Dates.TimeZone(base_tz)(dt), \"yyyy-mm-dd HH:MM:SS\")\n    return DateTime(str_dt, Dates.TimeZone(\"UTC+$(local_tz)\"))\nend\n```\n\nThis function takes a `DateTime` object and increases it by the specified number of hours (default is 3). It also allows you to specify a base time zone as an argument. The function will raise an error if you provide a `Date` type instead of a `DateTime`.","status":200,"tokens":[0,212],"elapsed":6.258175831,"_type":"aimessage"}]