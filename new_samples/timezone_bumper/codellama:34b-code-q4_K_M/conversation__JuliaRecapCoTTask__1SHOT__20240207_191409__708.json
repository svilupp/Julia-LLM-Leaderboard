[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `timezone_bumper(dt,bump)` that increases any provided timestamp by `bump::Int` hours (defaults to +3 hours). Make sure it works only for DateTime types and throws an error for Date types.\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"## Test Cases\n\n```jldoctest\njulia> using Dates, TimeZones\n\njulia> timezone_bumper(Date(2016,8,5), 3)\nERROR: MethodError: no method matching DateTime(::Date, ::Int64; kwargs...)\nClosest candidates are:\n  DateTime(::Tz, ::TimeType, ::TimeType, ::Vararg{Int64,N}) where {N, Tz<:TimeZone} at /opt/julia-1.2.0/share/julia/base/dates/types.jl:359\n  DateTime(::Tz, ::Date) where Tz<:Union{Local,FixedTimeZone} at /opt/julia-1.2.0/share/julia/stdlib/v1.2/TimeZones/src/constructors.jl:35\n  DateTime(::Tz, ::Date, ::Vararg{Int64,N}) where {N, Tz<:Union{Local,FixedTimeZone}} at /opt/julia-1.2.0/share/julia/stdlib/v1.2/TimeZones/src/constructors.jl:37\n  ...\n```\n\n```jldoctest\njulia> using Dates, TimeZones\n\njulia> timezone_bumper(DateTime(2016,8,5)) == DateTime(2016,8,5,3)\ntrue\n\njulia> timezone_bumper(DateTime(2016,8,5), 4) == DateTime(2016,8,5,7)\ntrue\n```","status":200,"tokens":[6,397],"elapsed":10.909745171,"_type":"aimessage"}]