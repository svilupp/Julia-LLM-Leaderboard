[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are given a list of daily temperature data `temps` (numbers). Write a function `weather_data_analyzer` that performs statistical analyses on this data (use `Statistics` package). The function should return results in named tuple (construct it with `(; key1=value1,key2=value2)` syntax) containing the `average`, `max`, `min` temperatures, and a `trend` (can be only: `:increasing`, `:decreasing`, or `:stable`). If the list is empty, the function should return a named tuple with all values set to `nothing`.\n\n\n\n# Data\n\nweather_data_analyzer([25, 27, 23, 20, 22])","variables":["task","data"],"_type":"usermessage"},{"content":"Here's how you could write such a function in Julia:\n\n```julia\nusing Statistics\n\nfunction weather_data_analyzer(temps)\n    if isempty(temps)\n        return (average=nothing, maximum=nothing, minimum=nothing, trend=nothing)\n    end\n    \n    average = mean(temps)\n    max_temp = maximum(temps)\n    min_temp = minimum(temps)\n    \n    if length(temps) == 1\n        trend = :stable  # If there's only one temperature, the trend is stable\n    elseif all(>=(0), diff(temps))\n        trend = :increasing  # If all differences are positive, the trend is increasing\n    elseif all(<=(0), diff(temps))\n        trend = :decreasing  # If all differences are negative, the trend is decreasing\n    else\n        trend = :stable  # Otherwise, the trend is stable\n    end\n    \n    return (average=average, maximum=max_temp, minimum=min_temp, trend=trend)\nend\n```\n\nYou can test this function with your data:\n\n```julia\nprint(weather_data_analyzer([25, 27, 23, 20, 22]))\n```","status":200,"tokens":[0,315],"elapsed":9.00539123,"_type":"aimessage"}]