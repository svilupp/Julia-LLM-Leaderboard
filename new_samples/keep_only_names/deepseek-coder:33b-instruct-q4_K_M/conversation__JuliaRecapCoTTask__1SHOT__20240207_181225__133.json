[{"content":"You are a world-class Julia language programmer and have a very systematic approach to solving problems.\n\nProblem Solving Steps:\n- Recall Julia snippets that will be useful for this Task\n- Solve the Task\n- Double-check that the solution is correct\n\nReminder on Julia Language:\n- Key Syntax: variables `x = 10`, control structures `if-elseif-else`, `isX ? X : Y`, `for`, `while`; functions `function f(x) end`, anonymous `x -> x^2`, arrays `[1, 2, 3]`, slicing `a[1:2]`, tuples `(1, 2)`, namedtuples `(; name=\"Julia\", )`, dictionary `Dict(\"key\" => value)`, `$` for string interpolation. \n- Prefer Julia standard libraries, avoid new packages unless explicitly requested. \n- Use general type annotations like `Number` or `AbstractString` to not be too restrictive. Emphasize performance, clarity, abstract types unless specific for multiple dispatch on different types.\n- Reserved names: `begin`, `end`, `function`. \n- Distinguished from Python with 1-based indexing, multiple dispatch\n\nIf the user provides any Special Instructions, prioritize them over the above guidelines.\n  ","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `keep_only_names` which iterates over the provided list of words (`words`) and removes all words that do not start with a capital letter (eg, remove \"dog\" but keep \"Dog\").\n\n\n\n# Special Instructions\n\n{{instructions}}\n","variables":["task","instructions"],"_type":"usermessage"},{"content":"Here is an example implementation in Julia for the `keep_only_names` function. The function uses a list comprehension to iterate over all words and checks if they start with an upper case letter using the `isuppercasefirst` function from the Base library, which returns true if the first character of a string is an upper case letter.\n\n```julia\nfunction keep_only_names(words::Vector{String})::Vector{String}\n    return [word for word in words if isuppercase(first(word))]\nend\n``` \n\nIn this function, `isuppercase` checks if the first character of each word (obtained using `first`) is an upper case letter. If it is, then the word is included in the output list. If not, it's skipped over. The output of this function will be a vector containing only words that start with an uppercase letter.","status":200,"tokens":[0,199],"elapsed":5.709268023,"_type":"aimessage"}]