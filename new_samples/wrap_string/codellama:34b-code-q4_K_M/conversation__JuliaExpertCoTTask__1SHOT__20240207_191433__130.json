[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"== \"\"\"\n    This\n    function\n    will\n    wrap\n    words\n    into\n    lines\"\"\"\n\n\n\n\n\n## Naive approach\n\n```julia\nfunction wrap_string(string, text_width=10)\n    result = \"\"\n    current_line = 0\n    for word in split(string)\n        if current_line + length(word) > text_width\n            result *= \"\\n\"\n            current_line = 0\n        end\n        result *= string(word)\n        current_line += length(word) + 1\n    end\n    return result\nend\n```\n\n\n# Testcases\n\n## Simple cases\n\nwrap_string(\"The quick brown fox jumps over the lazy dog\") == \"\"\"\n    The quick\n    brown\n    fox\n    jumps\n    over the\n    lazy\n    dog\"\"\"\n\n\n## Long words\n\nwrap_string(\"The quick brown fox jumps over a very lazy dog\") == \"\"\"\n    The quick\n    brown\n    fox jumps\n    over a\n    very\n    lazy dog\"\"\"\n\n\n# Finalize your implementation\n\nfunction wrap_string(string, text_width=10)\n    result = \"\"\n    current_line = 0\n    for word in split(string)\n        if current_line + length(word) > text_width\n            result *= \"\\n\"\n            current_line = 0\n        end\n        result *= string(word)\n        current_line += length(word) + 1\n    end\n    return result\nend","status":200,"tokens":[0,369],"elapsed":10.040931259,"_type":"aimessage"}]