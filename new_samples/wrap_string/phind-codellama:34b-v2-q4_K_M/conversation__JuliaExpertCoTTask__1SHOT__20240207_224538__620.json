[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nWrite a function `wrap_string`. It iterates over words and it will add a new line each time a maximum `text_width::Int=10` would be exceeded. Provide an example\n\n\n\n# Data\n\nwrap_string(\"This function will wrap words into lines\")","variables":["task","data"],"_type":"usermessage"},{"content":"```julia\nfunction wrap_string(str::String, text_width::Int=10)\n    words = split(str)\n    result = IOBuffer()\n    \n    current_line_length = 0\n    \n    for word in words\n        word_length = length(word)\n        \n        if current_line_length + word_length <= text_width\n            print(result, word, \" \")\n            current_line_length += word_length + 1\n        else\n            print(result, \"\\n\", word, \" \")\n            current_line_length = word_length + 1\n        end\n    end\n    \n    return String(take!(result))\nend\n\n# Example usage:\nstr = \"This function will wrap words into lines\"\nprint(wrap_string(str))\n```","status":200,"tokens":[0,189],"elapsed":5.156681249,"_type":"aimessage"}]