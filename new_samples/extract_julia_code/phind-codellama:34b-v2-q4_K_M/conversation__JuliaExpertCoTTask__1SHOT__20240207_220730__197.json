[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"```\nfunction extract_julia_code(md::String)\n    code_blocks = []\n    lines = split(md, '\\n')\n    i = 1\n    while i <= length(lines)\n        if startswith(lines[i], \"```julia\")\n            i += 1\n            while !startswith(lines[i], \"```\") && i <= length(lines)\n                push!(code_blocks, lines[i])\n                i += 1\n            end\n        else\n            i += 1\n        end\n    end\n    return join(code_blocks, '\\n')\nend\n\n# Testing the function\nmd = \"```julia\\nprintln(\\\"hello world\\\")\\n```\\n```julia\\nprintln(\\\"hello again\\\")\\n```\"\n@assert extract_julia_code(md) == \"println(\\\"hello world\\\")\\nprintln(\\\"hello again\\\")\"\n```","status":200,"tokens":[0,225],"elapsed":6.172745004,"_type":"aimessage"}]