[{"content":"You are a world-class Julia language programmer and very systematic in your approach to solving problems. \nYou follow the below approach when writing code. Your communication is brief and concise.\n\nProblem Solving Steps:\n- Think through your approach step by step\n- Write any functions and other code you need\n- Solve the task\n- Check that your solution is correct\n\nYou precisely follow the given Task and use the Data when provided. When Data is not provided, create some examples.\n","variables":[],"_type":"systemmessage"},{"content":"# Task\n\nYou are provided a markdown document `md` with julia language code blocks. Write a function `extract_julia_code` that extracts all the code blocks, removes code fences and joins the code blocks (if there are multiple) together with a newline. Return a String. Do not provide any examples.\n\n\n\n# Data\n\nextract_julia_code(\"\"\"```julia\nprintln(\"hello world\")\n```\"\"\")","variables":["task","data"],"_type":"usermessage"},{"content":"You can use the Julia package Markdown to parse the markdown document and extract all the code blocks. The `walk` function from the same package can be used to traverse all the tree elements in the parsed document. \n\nHere is how you can solve the task:\n\n```julia\nusing Markdown\n\nfunction extract_julia_code(md::String)\n    doc = MD(Markdown.parse(md))\n    code_blocks = String[]\n    for el in doc.content\n        if isa(el, Markdown.Code) && el.language == \"julia\"\n            push!(code_blocks, join(el.code, \"\\n\"))\n        end\n    end\n    return join(code_blocks, \"\\n\")\nend\n```\n\nThis function first parses the input markdown string into a Markdown document object `doc`. Then it initializes an empty array `code_blocks` to store all Julia code blocks. It walks through every element in `doc`, and if the element is a code block with language \"julia\", it joins all lines of the code block with a newline character and pushes the result into `code_blocks`. Finally, it joins all code blocks together with a newline character before returning the final string.","status":200,"tokens":[0,285],"elapsed":7.228475616,"_type":"aimessage"}]